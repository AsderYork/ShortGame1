#include "LandscapeMeshGenerator.h"

namespace GEM::GameSim
{
	/**!
	Helper structures and tables from Eric Lengyel's implementation of MarchingCubes
	http://transvoxel.org/.
	*/
	struct RegularCellData
	{
		unsigned char	geometryCounts;		// High nibble is vertex count, low nibble is triangle count.
		unsigned char	vertexIndex[15];	// Groups of 3 indexes giving the triangulation.

		long GetVertexCount(void) const
		{
			return (geometryCounts >> 4);
		}

		long GetTriangleCount(void) const
		{
			return (geometryCounts & 0x0F);
		}
	};
	const unsigned char regularCellClass[256] =
	{
		0x00, 0x01, 0x01, 0x03, 0x01, 0x03, 0x02, 0x04, 0x01, 0x02, 0x03, 0x04, 0x03, 0x04, 0x04, 0x03,
		0x01, 0x03, 0x02, 0x04, 0x02, 0x04, 0x06, 0x0C, 0x02, 0x05, 0x05, 0x0B, 0x05, 0x0A, 0x07, 0x04,
		0x01, 0x02, 0x03, 0x04, 0x02, 0x05, 0x05, 0x0A, 0x02, 0x06, 0x04, 0x0C, 0x05, 0x07, 0x0B, 0x04,
		0x03, 0x04, 0x04, 0x03, 0x05, 0x0B, 0x07, 0x04, 0x05, 0x07, 0x0A, 0x04, 0x08, 0x0E, 0x0E, 0x03,
		0x01, 0x02, 0x02, 0x05, 0x03, 0x04, 0x05, 0x0B, 0x02, 0x06, 0x05, 0x07, 0x04, 0x0C, 0x0A, 0x04,
		0x03, 0x04, 0x05, 0x0A, 0x04, 0x03, 0x07, 0x04, 0x05, 0x07, 0x08, 0x0E, 0x0B, 0x04, 0x0E, 0x03,
		0x02, 0x06, 0x05, 0x07, 0x05, 0x07, 0x08, 0x0E, 0x06, 0x09, 0x07, 0x0F, 0x07, 0x0F, 0x0E, 0x0D,
		0x04, 0x0C, 0x0B, 0x04, 0x0A, 0x04, 0x0E, 0x03, 0x07, 0x0F, 0x0E, 0x0D, 0x0E, 0x0D, 0x02, 0x01,
		0x01, 0x02, 0x02, 0x05, 0x02, 0x05, 0x06, 0x07, 0x03, 0x05, 0x04, 0x0A, 0x04, 0x0B, 0x0C, 0x04,
		0x02, 0x05, 0x06, 0x07, 0x06, 0x07, 0x09, 0x0F, 0x05, 0x08, 0x07, 0x0E, 0x07, 0x0E, 0x0F, 0x0D,
		0x03, 0x05, 0x04, 0x0B, 0x05, 0x08, 0x07, 0x0E, 0x04, 0x07, 0x03, 0x04, 0x0A, 0x0E, 0x04, 0x03,
		0x04, 0x0A, 0x0C, 0x04, 0x07, 0x0E, 0x0F, 0x0D, 0x0B, 0x0E, 0x04, 0x03, 0x0E, 0x02, 0x0D, 0x01,
		0x03, 0x05, 0x05, 0x08, 0x04, 0x0A, 0x07, 0x0E, 0x04, 0x07, 0x0B, 0x0E, 0x03, 0x04, 0x04, 0x03,
		0x04, 0x0B, 0x07, 0x0E, 0x0C, 0x04, 0x0F, 0x0D, 0x0A, 0x0E, 0x0E, 0x02, 0x04, 0x03, 0x0D, 0x01,
		0x04, 0x07, 0x0A, 0x0E, 0x0B, 0x0E, 0x0E, 0x02, 0x0C, 0x0F, 0x04, 0x0D, 0x04, 0x0D, 0x03, 0x01,
		0x03, 0x04, 0x04, 0x03, 0x04, 0x03, 0x0D, 0x01, 0x04, 0x0D, 0x03, 0x01, 0x03, 0x01, 0x01, 0x00
	};
	const RegularCellData regularCellData[16] =
	{
		{ 0x00,{} },
	{ 0x31,{ 0, 1, 2 } },
	{ 0x62,{ 0, 1, 2, 3, 4, 5 } },
	{ 0x42,{ 0, 1, 2, 0, 2, 3 } },
	{ 0x53,{ 0, 1, 4, 1, 3, 4, 1, 2, 3 } },
	{ 0x73,{ 0, 1, 2, 0, 2, 3, 4, 5, 6 } },
	{ 0x93,{ 0, 1, 2, 3, 4, 5, 6, 7, 8 } },
	{ 0x84,{ 0, 1, 4, 1, 3, 4, 1, 2, 3, 5, 6, 7 } },
	{ 0x84,{ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7 } },
	{ 0xC4,{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 } },
	{ 0x64,{ 0, 4, 5, 0, 1, 4, 1, 3, 4, 1, 2, 3 } },
	{ 0x64,{ 0, 5, 4, 0, 4, 1, 1, 4, 3, 1, 3, 2 } },
	{ 0x64,{ 0, 4, 5, 0, 3, 4, 0, 1, 3, 1, 2, 3 } },
	{ 0x64,{ 0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5 } },
	{ 0x75,{ 0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 5, 0, 5, 6 } },
	{ 0x95,{ 0, 4, 5, 0, 3, 4, 0, 1, 3, 1, 2, 3, 6, 7, 8 } }
	};
	const unsigned short regularVertexData[256][12] =
	{
		{},
	{ 0x6201, 0x5102, 0x3304 },
	{ 0x6201, 0x2315, 0x4113 },
	{ 0x5102, 0x3304, 0x2315, 0x4113 },
	{ 0x5102, 0x4223, 0x1326 },
	{ 0x3304, 0x6201, 0x4223, 0x1326 },
	{ 0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326 },
	{ 0x4223, 0x1326, 0x3304, 0x2315, 0x4113 },
	{ 0x4113, 0x8337, 0x4223 },
	{ 0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337 },
	{ 0x6201, 0x2315, 0x8337, 0x4223 },
	{ 0x5102, 0x3304, 0x2315, 0x8337, 0x4223 },
	{ 0x5102, 0x4113, 0x8337, 0x1326 },
	{ 0x4113, 0x8337, 0x1326, 0x3304, 0x6201 },
	{ 0x6201, 0x2315, 0x8337, 0x1326, 0x5102 },
	{ 0x3304, 0x2315, 0x8337, 0x1326 },
	{ 0x3304, 0x1146, 0x2245 },
	{ 0x6201, 0x5102, 0x1146, 0x2245 },
	{ 0x6201, 0x2315, 0x4113, 0x3304, 0x1146, 0x2245 },
	{ 0x2315, 0x4113, 0x5102, 0x1146, 0x2245 },
	{ 0x5102, 0x4223, 0x1326, 0x3304, 0x1146, 0x2245 },
	{ 0x1146, 0x2245, 0x6201, 0x4223, 0x1326 },
	{ 0x3304, 0x1146, 0x2245, 0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326 },
	{ 0x4223, 0x1326, 0x1146, 0x2245, 0x2315, 0x4113 },
	{ 0x4223, 0x4113, 0x8337, 0x3304, 0x1146, 0x2245 },
	{ 0x6201, 0x5102, 0x1146, 0x2245, 0x4223, 0x4113, 0x8337 },
	{ 0x4223, 0x6201, 0x2315, 0x8337, 0x3304, 0x1146, 0x2245 },
	{ 0x4223, 0x8337, 0x2315, 0x2245, 0x1146, 0x5102 },
	{ 0x5102, 0x4113, 0x8337, 0x1326, 0x3304, 0x1146, 0x2245 },
	{ 0x4113, 0x8337, 0x1326, 0x1146, 0x2245, 0x6201 },
	{ 0x6201, 0x2315, 0x8337, 0x1326, 0x5102, 0x3304, 0x1146, 0x2245 },
	{ 0x2245, 0x2315, 0x8337, 0x1326, 0x1146 },
	{ 0x2315, 0x2245, 0x8157 },
	{ 0x6201, 0x5102, 0x3304, 0x2315, 0x2245, 0x8157 },
	{ 0x4113, 0x6201, 0x2245, 0x8157 },
	{ 0x2245, 0x8157, 0x4113, 0x5102, 0x3304 },
	{ 0x5102, 0x4223, 0x1326, 0x2315, 0x2245, 0x8157 },
	{ 0x6201, 0x4223, 0x1326, 0x3304, 0x2315, 0x2245, 0x8157 },
	{ 0x6201, 0x2245, 0x8157, 0x4113, 0x5102, 0x4223, 0x1326 },
	{ 0x4223, 0x1326, 0x3304, 0x2245, 0x8157, 0x4113 },
	{ 0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157 },
	{ 0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157 },
	{ 0x8337, 0x4223, 0x6201, 0x2245, 0x8157 },
	{ 0x5102, 0x3304, 0x2245, 0x8157, 0x8337, 0x4223 },
	{ 0x5102, 0x4113, 0x8337, 0x1326, 0x2315, 0x2245, 0x8157 },
	{ 0x4113, 0x8337, 0x1326, 0x3304, 0x6201, 0x2315, 0x2245, 0x8157 },
	{ 0x5102, 0x1326, 0x8337, 0x8157, 0x2245, 0x6201 },
	{ 0x8157, 0x8337, 0x1326, 0x3304, 0x2245 },
	{ 0x2315, 0x3304, 0x1146, 0x8157 },
	{ 0x6201, 0x5102, 0x1146, 0x8157, 0x2315 },
	{ 0x3304, 0x1146, 0x8157, 0x4113, 0x6201 },
	{ 0x4113, 0x5102, 0x1146, 0x8157 },
	{ 0x2315, 0x3304, 0x1146, 0x8157, 0x5102, 0x4223, 0x1326 },
	{ 0x1326, 0x4223, 0x6201, 0x2315, 0x8157, 0x1146 },
	{ 0x3304, 0x1146, 0x8157, 0x4113, 0x6201, 0x5102, 0x4223, 0x1326 },
	{ 0x1326, 0x1146, 0x8157, 0x4113, 0x4223 },
	{ 0x2315, 0x3304, 0x1146, 0x8157, 0x4223, 0x4113, 0x8337 },
	{ 0x6201, 0x5102, 0x1146, 0x8157, 0x2315, 0x4223, 0x4113, 0x8337 },
	{ 0x3304, 0x1146, 0x8157, 0x8337, 0x4223, 0x6201 },
	{ 0x4223, 0x5102, 0x1146, 0x8157, 0x8337 },
	{ 0x2315, 0x3304, 0x1146, 0x8157, 0x5102, 0x4113, 0x8337, 0x1326 },
	{ 0x6201, 0x4113, 0x8337, 0x1326, 0x1146, 0x8157, 0x2315 },
	{ 0x6201, 0x3304, 0x1146, 0x8157, 0x8337, 0x1326, 0x5102 },
	{ 0x1326, 0x1146, 0x8157, 0x8337 },
	{ 0x1326, 0x8267, 0x1146 },
	{ 0x6201, 0x5102, 0x3304, 0x1326, 0x8267, 0x1146 },
	{ 0x6201, 0x2315, 0x4113, 0x1326, 0x8267, 0x1146 },
	{ 0x5102, 0x3304, 0x2315, 0x4113, 0x1326, 0x8267, 0x1146 },
	{ 0x5102, 0x4223, 0x8267, 0x1146 },
	{ 0x3304, 0x6201, 0x4223, 0x8267, 0x1146 },
	{ 0x5102, 0x4223, 0x8267, 0x1146, 0x6201, 0x2315, 0x4113 },
	{ 0x1146, 0x8267, 0x4223, 0x4113, 0x2315, 0x3304 },
	{ 0x4113, 0x8337, 0x4223, 0x1326, 0x8267, 0x1146 },
	{ 0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337, 0x1326, 0x8267, 0x1146 },
	{ 0x6201, 0x2315, 0x8337, 0x4223, 0x1326, 0x8267, 0x1146 },
	{ 0x5102, 0x3304, 0x2315, 0x8337, 0x4223, 0x1326, 0x8267, 0x1146 },
	{ 0x8267, 0x1146, 0x5102, 0x4113, 0x8337 },
	{ 0x6201, 0x4113, 0x8337, 0x8267, 0x1146, 0x3304 },
	{ 0x6201, 0x2315, 0x8337, 0x8267, 0x1146, 0x5102 },
	{ 0x1146, 0x3304, 0x2315, 0x8337, 0x8267 },
	{ 0x3304, 0x1326, 0x8267, 0x2245 },
	{ 0x1326, 0x8267, 0x2245, 0x6201, 0x5102 },
	{ 0x3304, 0x1326, 0x8267, 0x2245, 0x6201, 0x2315, 0x4113 },
	{ 0x1326, 0x8267, 0x2245, 0x2315, 0x4113, 0x5102 },
	{ 0x5102, 0x4223, 0x8267, 0x2245, 0x3304 },
	{ 0x6201, 0x4223, 0x8267, 0x2245 },
	{ 0x5102, 0x4223, 0x8267, 0x2245, 0x3304, 0x6201, 0x2315, 0x4113 },
	{ 0x4113, 0x4223, 0x8267, 0x2245, 0x2315 },
	{ 0x3304, 0x1326, 0x8267, 0x2245, 0x4223, 0x4113, 0x8337 },
	{ 0x1326, 0x8267, 0x2245, 0x6201, 0x5102, 0x4223, 0x4113, 0x8337 },
	{ 0x3304, 0x1326, 0x8267, 0x2245, 0x4223, 0x6201, 0x2315, 0x8337 },
	{ 0x5102, 0x1326, 0x8267, 0x2245, 0x2315, 0x8337, 0x4223 },
	{ 0x3304, 0x2245, 0x8267, 0x8337, 0x4113, 0x5102 },
	{ 0x8337, 0x8267, 0x2245, 0x6201, 0x4113 },
	{ 0x5102, 0x6201, 0x2315, 0x8337, 0x8267, 0x2245, 0x3304 },
	{ 0x2315, 0x8337, 0x8267, 0x2245 },
	{ 0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146 },
	{ 0x6201, 0x5102, 0x3304, 0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146 },
	{ 0x6201, 0x2245, 0x8157, 0x4113, 0x1326, 0x8267, 0x1146 },
	{ 0x2245, 0x8157, 0x4113, 0x5102, 0x3304, 0x1326, 0x8267, 0x1146 },
	{ 0x4223, 0x8267, 0x1146, 0x5102, 0x2315, 0x2245, 0x8157 },
	{ 0x3304, 0x6201, 0x4223, 0x8267, 0x1146, 0x2315, 0x2245, 0x8157 },
	{ 0x4223, 0x8267, 0x1146, 0x5102, 0x6201, 0x2245, 0x8157, 0x4113 },
	{ 0x3304, 0x2245, 0x8157, 0x4113, 0x4223, 0x8267, 0x1146 },
	{ 0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146 },
	{ 0x6201, 0x5102, 0x3304, 0x4223, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146 },
	{ 0x8337, 0x4223, 0x6201, 0x2245, 0x8157, 0x1326, 0x8267, 0x1146 },
	{ 0x4223, 0x5102, 0x3304, 0x2245, 0x8157, 0x8337, 0x1326, 0x8267, 0x1146 },
	{ 0x8267, 0x1146, 0x5102, 0x4113, 0x8337, 0x2315, 0x2245, 0x8157 },
	{ 0x6201, 0x4113, 0x8337, 0x8267, 0x1146, 0x3304, 0x2315, 0x2245, 0x8157 },
	{ 0x8337, 0x8267, 0x1146, 0x5102, 0x6201, 0x2245, 0x8157 },
	{ 0x3304, 0x2245, 0x8157, 0x8337, 0x8267, 0x1146 },
	{ 0x8157, 0x2315, 0x3304, 0x1326, 0x8267 },
	{ 0x8267, 0x8157, 0x2315, 0x6201, 0x5102, 0x1326 },
	{ 0x8267, 0x1326, 0x3304, 0x6201, 0x4113, 0x8157 },
	{ 0x8267, 0x8157, 0x4113, 0x5102, 0x1326 },
	{ 0x5102, 0x4223, 0x8267, 0x8157, 0x2315, 0x3304 },
	{ 0x2315, 0x6201, 0x4223, 0x8267, 0x8157 },
	{ 0x3304, 0x5102, 0x4223, 0x8267, 0x8157, 0x4113, 0x6201 },
	{ 0x4113, 0x4223, 0x8267, 0x8157 },
	{ 0x8157, 0x2315, 0x3304, 0x1326, 0x8267, 0x4223, 0x4113, 0x8337 },
	{ 0x8157, 0x2315, 0x6201, 0x5102, 0x1326, 0x8267, 0x4223, 0x4113, 0x8337 },
	{ 0x8157, 0x8337, 0x4223, 0x6201, 0x3304, 0x1326, 0x8267 },
	{ 0x5102, 0x1326, 0x8267, 0x8157, 0x8337, 0x4223 },
	{ 0x8267, 0x8157, 0x2315, 0x3304, 0x5102, 0x4113, 0x8337 },
	{ 0x6201, 0x4113, 0x8337, 0x8267, 0x8157, 0x2315 },
	{ 0x6201, 0x3304, 0x5102, 0x8337, 0x8267, 0x8157 },
	{ 0x8337, 0x8267, 0x8157 },
	{ 0x8337, 0x8157, 0x8267 },
	{ 0x6201, 0x5102, 0x3304, 0x8337, 0x8157, 0x8267 },
	{ 0x6201, 0x2315, 0x4113, 0x8337, 0x8157, 0x8267 },
	{ 0x5102, 0x3304, 0x2315, 0x4113, 0x8337, 0x8157, 0x8267 },
	{ 0x5102, 0x4223, 0x1326, 0x8337, 0x8157, 0x8267 },
	{ 0x6201, 0x4223, 0x1326, 0x3304, 0x8337, 0x8157, 0x8267 },
	{ 0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326, 0x8337, 0x8157, 0x8267 },
	{ 0x4223, 0x1326, 0x3304, 0x2315, 0x4113, 0x8337, 0x8157, 0x8267 },
	{ 0x4113, 0x8157, 0x8267, 0x4223 },
	{ 0x4223, 0x4113, 0x8157, 0x8267, 0x6201, 0x5102, 0x3304 },
	{ 0x8157, 0x8267, 0x4223, 0x6201, 0x2315 },
	{ 0x3304, 0x2315, 0x8157, 0x8267, 0x4223, 0x5102 },
	{ 0x1326, 0x5102, 0x4113, 0x8157, 0x8267 },
	{ 0x8157, 0x4113, 0x6201, 0x3304, 0x1326, 0x8267 },
	{ 0x1326, 0x5102, 0x6201, 0x2315, 0x8157, 0x8267 },
	{ 0x8267, 0x1326, 0x3304, 0x2315, 0x8157 },
	{ 0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267 },
	{ 0x6201, 0x5102, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267 },
	{ 0x6201, 0x2315, 0x4113, 0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267 },
	{ 0x2315, 0x4113, 0x5102, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267 },
	{ 0x5102, 0x4223, 0x1326, 0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267 },
	{ 0x1146, 0x2245, 0x6201, 0x4223, 0x1326, 0x8337, 0x8157, 0x8267 },
	{ 0x6201, 0x2315, 0x4113, 0x5102, 0x4223, 0x1326, 0x3304, 0x1146, 0x2245, 0x8337, 0x8157, 0x8267 },
	{ 0x4113, 0x4223, 0x1326, 0x1146, 0x2245, 0x2315, 0x8337, 0x8157, 0x8267 },
	{ 0x4223, 0x4113, 0x8157, 0x8267, 0x3304, 0x1146, 0x2245 },
	{ 0x6201, 0x5102, 0x1146, 0x2245, 0x4223, 0x4113, 0x8157, 0x8267 },
	{ 0x8157, 0x8267, 0x4223, 0x6201, 0x2315, 0x3304, 0x1146, 0x2245 },
	{ 0x2315, 0x8157, 0x8267, 0x4223, 0x5102, 0x1146, 0x2245 },
	{ 0x1326, 0x5102, 0x4113, 0x8157, 0x8267, 0x3304, 0x1146, 0x2245 },
	{ 0x1326, 0x1146, 0x2245, 0x6201, 0x4113, 0x8157, 0x8267 },
	{ 0x5102, 0x6201, 0x2315, 0x8157, 0x8267, 0x1326, 0x3304, 0x1146, 0x2245 },
	{ 0x1326, 0x1146, 0x2245, 0x2315, 0x8157, 0x8267 },
	{ 0x2315, 0x2245, 0x8267, 0x8337 },
	{ 0x2315, 0x2245, 0x8267, 0x8337, 0x6201, 0x5102, 0x3304 },
	{ 0x4113, 0x6201, 0x2245, 0x8267, 0x8337 },
	{ 0x5102, 0x4113, 0x8337, 0x8267, 0x2245, 0x3304 },
	{ 0x2315, 0x2245, 0x8267, 0x8337, 0x5102, 0x4223, 0x1326 },
	{ 0x6201, 0x4223, 0x1326, 0x3304, 0x8337, 0x2315, 0x2245, 0x8267 },
	{ 0x4113, 0x6201, 0x2245, 0x8267, 0x8337, 0x5102, 0x4223, 0x1326 },
	{ 0x4113, 0x4223, 0x1326, 0x3304, 0x2245, 0x8267, 0x8337 },
	{ 0x2315, 0x2245, 0x8267, 0x4223, 0x4113 },
	{ 0x2315, 0x2245, 0x8267, 0x4223, 0x4113, 0x6201, 0x5102, 0x3304 },
	{ 0x6201, 0x2245, 0x8267, 0x4223 },
	{ 0x3304, 0x2245, 0x8267, 0x4223, 0x5102 },
	{ 0x5102, 0x4113, 0x2315, 0x2245, 0x8267, 0x1326 },
	{ 0x4113, 0x2315, 0x2245, 0x8267, 0x1326, 0x3304, 0x6201 },
	{ 0x5102, 0x6201, 0x2245, 0x8267, 0x1326 },
	{ 0x3304, 0x2245, 0x8267, 0x1326 },
	{ 0x8267, 0x8337, 0x2315, 0x3304, 0x1146 },
	{ 0x5102, 0x1146, 0x8267, 0x8337, 0x2315, 0x6201 },
	{ 0x3304, 0x1146, 0x8267, 0x8337, 0x4113, 0x6201 },
	{ 0x8337, 0x4113, 0x5102, 0x1146, 0x8267 },
	{ 0x8267, 0x8337, 0x2315, 0x3304, 0x1146, 0x5102, 0x4223, 0x1326 },
	{ 0x1146, 0x8267, 0x8337, 0x2315, 0x6201, 0x4223, 0x1326 },
	{ 0x8267, 0x8337, 0x4113, 0x6201, 0x3304, 0x1146, 0x5102, 0x4223, 0x1326 },
	{ 0x4113, 0x4223, 0x1326, 0x1146, 0x8267, 0x8337 },
	{ 0x3304, 0x2315, 0x4113, 0x4223, 0x8267, 0x1146 },
	{ 0x2315, 0x6201, 0x5102, 0x1146, 0x8267, 0x4223, 0x4113 },
	{ 0x1146, 0x8267, 0x4223, 0x6201, 0x3304 },
	{ 0x5102, 0x1146, 0x8267, 0x4223 },
	{ 0x8267, 0x1326, 0x5102, 0x4113, 0x2315, 0x3304, 0x1146 },
	{ 0x6201, 0x4113, 0x2315, 0x1326, 0x1146, 0x8267 },
	{ 0x6201, 0x3304, 0x1146, 0x8267, 0x1326, 0x5102 },
	{ 0x1326, 0x1146, 0x8267 },
	{ 0x1326, 0x8337, 0x8157, 0x1146 },
	{ 0x8337, 0x8157, 0x1146, 0x1326, 0x6201, 0x5102, 0x3304 },
	{ 0x8337, 0x8157, 0x1146, 0x1326, 0x6201, 0x2315, 0x4113 },
	{ 0x4113, 0x5102, 0x3304, 0x2315, 0x1326, 0x8337, 0x8157, 0x1146 },
	{ 0x8337, 0x8157, 0x1146, 0x5102, 0x4223 },
	{ 0x6201, 0x4223, 0x8337, 0x8157, 0x1146, 0x3304 },
	{ 0x8337, 0x8157, 0x1146, 0x5102, 0x4223, 0x6201, 0x2315, 0x4113 },
	{ 0x4223, 0x8337, 0x8157, 0x1146, 0x3304, 0x2315, 0x4113 },
	{ 0x4223, 0x4113, 0x8157, 0x1146, 0x1326 },
	{ 0x4223, 0x4113, 0x8157, 0x1146, 0x1326, 0x6201, 0x5102, 0x3304 },
	{ 0x1146, 0x8157, 0x2315, 0x6201, 0x4223, 0x1326 },
	{ 0x4223, 0x5102, 0x3304, 0x2315, 0x8157, 0x1146, 0x1326 },
	{ 0x4113, 0x8157, 0x1146, 0x5102 },
	{ 0x6201, 0x4113, 0x8157, 0x1146, 0x3304 },
	{ 0x2315, 0x8157, 0x1146, 0x5102, 0x6201 },
	{ 0x2315, 0x8157, 0x1146, 0x3304 },
	{ 0x2245, 0x3304, 0x1326, 0x8337, 0x8157 },
	{ 0x6201, 0x2245, 0x8157, 0x8337, 0x1326, 0x5102 },
	{ 0x2245, 0x3304, 0x1326, 0x8337, 0x8157, 0x6201, 0x2315, 0x4113 },
	{ 0x2245, 0x2315, 0x4113, 0x5102, 0x1326, 0x8337, 0x8157 },
	{ 0x4223, 0x8337, 0x8157, 0x2245, 0x3304, 0x5102 },
	{ 0x8157, 0x2245, 0x6201, 0x4223, 0x8337 },
	{ 0x2245, 0x3304, 0x5102, 0x4223, 0x8337, 0x8157, 0x4113, 0x6201, 0x2315 },
	{ 0x4223, 0x8337, 0x8157, 0x2245, 0x2315, 0x4113 },
	{ 0x4113, 0x8157, 0x2245, 0x3304, 0x1326, 0x4223 },
	{ 0x1326, 0x4223, 0x4113, 0x8157, 0x2245, 0x6201, 0x5102 },
	{ 0x8157, 0x2245, 0x3304, 0x1326, 0x4223, 0x6201, 0x2315 },
	{ 0x5102, 0x1326, 0x4223, 0x2315, 0x8157, 0x2245 },
	{ 0x3304, 0x5102, 0x4113, 0x8157, 0x2245 },
	{ 0x4113, 0x8157, 0x2245, 0x6201 },
	{ 0x5102, 0x6201, 0x2315, 0x8157, 0x2245, 0x3304 },
	{ 0x2315, 0x8157, 0x2245 },
	{ 0x1146, 0x1326, 0x8337, 0x2315, 0x2245 },
	{ 0x1146, 0x1326, 0x8337, 0x2315, 0x2245, 0x6201, 0x5102, 0x3304 },
	{ 0x6201, 0x2245, 0x1146, 0x1326, 0x8337, 0x4113 },
	{ 0x2245, 0x1146, 0x1326, 0x8337, 0x4113, 0x5102, 0x3304 },
	{ 0x5102, 0x1146, 0x2245, 0x2315, 0x8337, 0x4223 },
	{ 0x1146, 0x3304, 0x6201, 0x4223, 0x8337, 0x2315, 0x2245 },
	{ 0x8337, 0x4113, 0x6201, 0x2245, 0x1146, 0x5102, 0x4223 },
	{ 0x4223, 0x8337, 0x4113, 0x3304, 0x2245, 0x1146 },
	{ 0x4113, 0x2315, 0x2245, 0x1146, 0x1326, 0x4223 },
	{ 0x1146, 0x1326, 0x4223, 0x4113, 0x2315, 0x2245, 0x6201, 0x5102, 0x3304 },
	{ 0x1326, 0x4223, 0x6201, 0x2245, 0x1146 },
	{ 0x4223, 0x5102, 0x3304, 0x2245, 0x1146, 0x1326 },
	{ 0x2245, 0x1146, 0x5102, 0x4113, 0x2315 },
	{ 0x4113, 0x2315, 0x2245, 0x1146, 0x3304, 0x6201 },
	{ 0x6201, 0x2245, 0x1146, 0x5102 },
	{ 0x3304, 0x2245, 0x1146 },
	{ 0x3304, 0x1326, 0x8337, 0x2315 },
	{ 0x5102, 0x1326, 0x8337, 0x2315, 0x6201 },
	{ 0x6201, 0x3304, 0x1326, 0x8337, 0x4113 },
	{ 0x5102, 0x1326, 0x8337, 0x4113 },
	{ 0x4223, 0x8337, 0x2315, 0x3304, 0x5102 },
	{ 0x6201, 0x4223, 0x8337, 0x2315 },
	{ 0x3304, 0x5102, 0x4223, 0x8337, 0x4113, 0x6201 },
	{ 0x4113, 0x4223, 0x8337 },
	{ 0x4113, 0x2315, 0x3304, 0x1326, 0x4223 },
	{ 0x1326, 0x4223, 0x4113, 0x2315, 0x6201, 0x5102 },
	{ 0x3304, 0x1326, 0x4223, 0x6201 },
	{ 0x5102, 0x1326, 0x4223 },
	{ 0x5102, 0x4113, 0x2315, 0x3304 },
	{ 0x6201, 0x4113, 0x2315 },
	{ 0x6201, 0x3304, 0x5102 },
	{}
	};

void LandscapeMeshGenerator::ProcessOneCube(int x, int y, int z)
{
	uint8_t corner[8];
	corner[0] = getNodeValue(x - 1	, y	-1	, z	- 1	);
	corner[1] = getNodeValue(x   	, y	-1	, z	- 1	);
	corner[2] = getNodeValue(x - 1	, y -1	, z    	);
	corner[3] = getNodeValue(x   	, y	-1	, z  	);
	corner[4] = getNodeValue(x - 1	, y 	, z	- 1	);
	corner[5] = getNodeValue(x   	, y 	, z	- 1	);
	corner[6] = getNodeValue(x - 1	, y 	, z  	);
	corner[7] = getNodeValue(x   	, y 	, z  	);

	unsigned long caseCode = 0;
	caseCode += corner[0] > 0 ? 1   : 0;
	caseCode += corner[1] > 0 ? 2   : 0;
	caseCode += corner[2] > 0 ? 4   : 0;
	caseCode += corner[3] > 0 ? 8   : 0;
	caseCode += corner[4] > 0 ? 16  : 0;
	caseCode += corner[5] > 0 ? 32  : 0;
	caseCode += corner[6] > 0 ? 64  : 0;
	caseCode += corner[7] > 0 ? 128 : 0;

	if (caseCode == 0 || caseCode == 255)
	{
		return;
	}
	//Otherwise cell has a non-trivial triangulation

	char ValidityMask = 0;
	ValidityMask += x > 0 ? 1 : 0;
	ValidityMask += z > 0 ? 2 : 0;
	ValidityMask += y > 0 ? 4 : 0;
		

	for (int traingle = 0; traingle < regularCellData[regularCellClass[caseCode]].GetTriangleCount(); traingle++)
	{
		for (int VertexId = 0; VertexId < 3; VertexId++)
		{
			auto edgeCode = regularVertexData[caseCode][VertexId + traingle*3];
			unsigned short v0 = (edgeCode >> 4) & 0x0F;
			unsigned short v1 = edgeCode & 0x0F;


			if ((edgeCode >> 8) & ValidityMask)
			{//If vertex needs to be added
				auto& CurrVertex = NodeDecks[1 + x - (edgeCode >> 8) & 0x01 ? 1 : 0]
					[1 + z - (edgeCode >> 8) & 0x02 ? 1 : 0]
				[(y + (edgeCode >> 8) & 0x04 ? 1 : 0) % 2].Vertex[edgeCode & 0x0f];
				
				if (CurrVertex == std::numeric_limits<uint32_t>::max())
				{//Create new vertex
					float t = (float)corner[v1] / (corner[v1] - corner[v0]);

					btVector3 NewVertex;
					switch ((edgeCode >> 8) & 0x0f)
					{
					case 1: {NewVertex = btVector3((btScalar)x, (btScalar)y, (btScalar)(z - t)); break; }
					case 2: {NewVertex = btVector3((btScalar)(x - t), (btScalar)y, (btScalar)z); break; }
					case 3: {NewVertex = btVector3((btScalar)x, (btScalar)(y - t), (btScalar)z); break; }
					default:
						break;
					}
					m_vertices.push_back(NewVertex);
					CurrVertex = static_cast<uint32_t>(m_vertices.size() - 1);
					m_indices.push_back(CurrVertex);
				}
				else
				{
					//We allready created this vertex during this pass, so just find it again!
					m_indices.push_back(
						NodeDecks[1 + x - (edgeCode >> 8) & 0x01 ? 1 : 0]
						[1 + z - (edgeCode >> 8) & 0x02 ? 1 : 0]
					[(y + (edgeCode >> 8) & 0x04 ? 1 : 0) % 2].Vertex[edgeCode & 0x0f]);
				}

			}
			else
			{
				//Add index of a requested vertex in Indices;
				m_indices.push_back(
				NodeDecks[1 + x- (edgeCode >> 8) & 0x01 ? 1 : 0]
					[1 + z - (edgeCode >> 8) & 0x02 ? 1 : 0]
				[(y + (edgeCode >> 8) & 0x04 ? 1 : 0) % 2].Vertex[edgeCode & 0x0f]);
			}

		}
	}



}

}