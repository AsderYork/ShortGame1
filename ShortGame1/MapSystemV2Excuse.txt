So after some times have passed I have returned to a project. And what I see is a lot of realy complicated code. I'mean it's not like it totatlly
impenetratable, but still the task is not that difficult. So the second version of mapSystem!

Task List
1)Create a new chunkLoader. It must be able to load/unload bunches of unspecified data with cereal interface.
It's allready working, so "create" is, probably, not exactly right word. "Reuse"

2)Create MarchingCubeDataBlock(MCDB). A structure of data, that is actually a game map. Just nodes and their values, arranged in a cubes.

3)Create MarchingCubesToMesh, that would be able to translate MCDB's in a mesh! But not so fast! System must be able to reload and rebuid meshes fast!
So MCToMesh should keep intermediate data, like cube-list, cube-values and everything else.

3.1) Create MCToMesh, that would create meshes out of MCDB's. Old-style, with 3-flavor texturing and vector reduction
3.2) Create DataStructure to keep created meshes, and a system to check, if existing mesh is not outdated, otherwise recreate it
3.3) Update MCToMesh to keep intermadiate data, to update vector list in case if node-values changed, BUT CUBE-VALUES stays the same
3.4) Update MCToMesh to update only cubes which values were changed. A difficult task, btw. definitely would require to use reference-list

2)Create MarchingCubesToMesh block and the MarchingBlock data format. MarchingB

Some more things.
1) The Cubie structure is in a process of being abandoned. Instead, Nodes will be accessed as part of the cubies by a special function. MidPoints
also will be in a separate vector, which is kinda duplicates the NodeMap, but without NodeValues so they will be accesed in a similar to Nodes way, through
a special function